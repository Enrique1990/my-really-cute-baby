{% comment %}
** Announcement bar - static **
- Static section
{% endcomment %}

{% assign id = section.id %}
{% assign size = section.settings.size %}
{% assign text_color = section.settings.text_color %}
{% assign show_close_icon = section.settings.show_close_icon %}

{% comment %} Advanced {% endcomment %}
{% assign width = section.settings.width %}
{% assign css_class = section.settings.css_class %}
{% assign custom_css = section.settings.custom_css %}

{% comment %} Is the color set to transparent? {% endcomment %}
{% assign text_alpha = text_color | color_extract: 'alpha' %}

{% comment %} Section specific CSS {% endcomment %}
{% capture section_css -%}
  .announcement-bar {
    background-color: {{ section.settings.background }};
  }

  .announcement-bar__icon {
    fill: {{ text_color }};
  }

  .announcement-bar__text a:not(.button) {
    color: {{ text_color }};
    text-decoration: underline;
  }

  .announcement-bar__close {
    fill: {{ text_color }};
    background-color: {{ text_color | color_modify: 'alpha', 0.1 }};
  }

  .announcement-bar__close:hover {
    background-color: {{ text_color | color_modify: 'alpha', 0.2 }};
  }

  .message-header {
    color: {% if text_alpha != 0 %}{{ text_color }}{% else %}{{ settings.regular_color }}{% endif %};
  }

  .button--secondary, .action_button--secondary, a.button--secondary.button {
    color: {{ text_color }};
    border-color: {{ text_color }};
  }

{%- endcapture -%}

{% style %}
  #shopify-section-{{ id }} {
    {% if width == 'wide' %}
      width: 100%;
    {% endif %}
  }
  {% render 'css-loop',
          css: section_css,
          id: id
  %}
  {% render 'css-loop',
          css: custom_css,
          id: id
  %}
{% endstyle %}

{% comment %} HTML markup {% endcomment %}
{% capture announcement %}
<div class="announcement-bar__container {{ css_class }}">
  <div
    class="announcement-bar is-{{ size }}"
    id="announcement-bar"
  >
    <div class="section is-width-{{ width }}">
      <div
        class="message-header"
        style="line-height: 1.5; padding: 1em 1.5em; position: relative;"
      >
        <div
          class="announcement-bar__content is-justify-{{ section.settings.alignment }} show-close-icon-{{ show_close_icon }}"
          style="height:20px; max-height:20px;min-height:20px;"
        >
        {% for block in section.blocks %}
          {% assign icon = block.settings.icon_label | downcase %}
          <div
            class="announcement-bar__text announcement-bar__text{% if forloop.index == 1 %}1{% else %}2{% endif %} text-align-center"
            style="position: absolute; display: inline-flex;"
          >
          {% if block.settings.icon_label != blank %}
            <span class="announcement-bar__icon is-{{ size }}">
              {% render 'icon', name: icon %}
            </span>
          {% endif %}
          {% if block.settings.button_label == blank and block.settings.link != blank %}
            <a class="announcement-full-link" href="{{ block.settings.link.url }}" {% if section.settings.text_color %}style="color:{{ section.settings.text_color}} !important;"{% endif %}>
          {% endif %}
              {{ block.settings.text }}
              <p class="prismfly-countdown countdown__timer" id="countdown"></p>
              {% if block.settings.button_label != blank %}
                <p class="buttons">
                  {% render 'button',
                    label: block.settings.button_label,
                    href: block.settings.link,
                    type: "link",
                    style: block.settings.button_style
                  %}
                </p>
              {% endif %}
          {% if block.settings.link != blank %}
            </a>
          {% endif %}
          </div>
        {% endfor %}
        </div>
        {% if show_close_icon %}
          <button class="close announcement-bar__close js-close-announcement" aria-label="close">
            {% render 'icon', name: 'x' %}
          </button>
        {% endif %}
      </div>
    </div>
  </div>

  <div class="announcement-bar__shadow" id="announcement-bar__shadow" aria-visible="false"></div>
</div>
{% endcapture %}

{% if section.settings.homepage_only %}
  {% if template == 'index' %}
    {{ announcement }}
  {% endif %}
{% else %}
  {{ announcement }}
{% endif %}

{% comment %}Javascript{% endcomment %}
<script
  type="application/json"
  data-section-id="{{ section.id }}"
  data-section-data
>
  {
    "homepage_only": {{ section.settings.homepage_only | json }},
    "enable_sticky": {{ section.settings.enable_sticky | json }},
    "show_close_icon": {{ section.settings.show_close_icon | json }},
    "alignment": {{ section.settings.alignment | json }},
    "width": {{ section.settings.width | json }}
  }
</script>
<script src="{{ 'z__jsAnnouncementBar.js' | asset_url }}"></script>
{% if section.blocks.size > 1 %}
<script>
  $(document).ready(function() {
    //MyBlah("hello");
  var count = 1;
  var maxCount = 2;
  textAnimate(count,maxCount);
  });

  function textAnimate(count,maxCount) {
    $(".announcement-bar__text"+count).animate({
      opacity: '0'
     },{ duration: 900, queue: false }).css('z-index', '1');
    count++;
    if (count > maxCount) {count = 1;}

    $(".announcement-bar__text"+count).show().animate({
      opacity: '1'
    }, { duration: 900, queue: false }).css('z-index', '3');

    window.setTimeout(function() { textAnimate(count,maxCount) }, 4000);
  }
</script>
{% endif %}

{{ "custom-announcement.scss.css" | asset_url | stylesheet_tag }}
{% if section.settings.countdown_enabled %}
  <script>
const div=document.getElementById("countdown");
 
setInterval(function(){ 
  var toDate=new Date();
  var tomorrow=new Date();
  tomorrow.setHours(24,0,0,0);
  var diffMS=tomorrow.getTime()/1000-toDate.getTime()/1000;
  var diffHr=Math.floor(diffMS/3600);
  diffMS=diffMS-diffHr*3600;
  var diffMi=Math.floor(diffMS/60);
  diffMS=diffMS-diffMi*60;
  var diffS=Math.floor(diffMS);
  var result=((diffHr<10)?"0"+diffHr:diffHr);
  result+=":"+((diffMi<10)?"0"+diffMi:diffMi);
  result+=":"+((diffS<10)?"0"+diffS:diffS);
  div.innerHTML=result;
  
},1000);

</script>
{% endif %}

{% comment %}Schema{% endcomment %}
{% schema %}

{
  "name": "Announcement 24",
  "class": "announcement-container jsAnnouncementBar",
  "max_blocks": 2,
  "settings": [
    {
      "type": "select",
      "id": "alignment",
      "label": "Text alignment",
      "options": [
        {
          "value": "start",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        }
      ],
      "default": "center"
    },
    {
      "type": "select",
      "id": "size",
      "label": "Base size",
      "options": [
        {
          "value": "small",
          "label": "Small"
        },
        {
          "value": "regular",
          "label": "Regular"
        },
        {
          "value": "large",
          "label": "Large"
        }
      ],
      "default": "regular"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background",
      "label": "Background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#FFFFFF"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "width",
      "label": "Width",
      "default": "wide",
      "options": [
        {
          "value": "standard",
          "label": "Standard"
        },
        {
          "value": "wide",
          "label": "Wide"
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "homepage_only",
      "label": "Home page only",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "enable_sticky",
      "label": "Enable sticky on scroll",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_close_icon",
      "label": "Show close icon",
      "default": true
    },
    {
      "type": "header",
      "content": "Advanced",
      "info": "[Learn more](https://help.outofthesandbox.com/hc/en-us/articles/360022329373)"
    },
    {
      "type": "text",
      "id": "css_class",
      "label": "CSS Class"
    },
    {
      "type": "textarea",
      "id": "custom_css",
      "label": "Custom CSS"
    },
    {
      "type": "header",
      "content": "Countdown Timer"
    },
    {
      "type": "checkbox",
      "id": "countdown_enabled",
      "label": "Enable Countdown Timer",
      "default": true
    }
  ],
  "blocks": [
  {
    "type": "announcement",
    "name": "Announcement Text",
    "settings": [
    {
      "type": "header",
      "content": "Text"
    },
    {
      "type": "text",
      "id": "icon_label",
      "label": "Icon",
      "placeholder": "Enter icon name",
      "info": "[Icon list](https://help.outofthesandbox.com/hc/en-us/articles/360021570294)",
      "default": "tag"
    },
    {
      "type": "richtext",
      "id": "text",
      "label": "Text",
      "default": "<p>Draw attention to promos + sales!</p>"
    },
    {
      "type": "header",
      "content": "Button"
    },
    {
      "type": "text",
      "id": "button_label",
      "label": "Label"
    },
    {
      "type": "url",
      "id": "link",
      "label": "Link"
    },
    {
      "type": "select",
      "id": "button_style",
      "label": "Style",
      "options": [
        {
          "value": "button--primary",
          "label": "Primary"
        },
        {
          "value": "button--secondary",
          "label": "Secondary"
        },
        {
          "value": "button--link-style",
          "label": "Link style"
        }
      ],
      "default": "button--primary"
    }

    ]
  }
  ]
}

{% endschema %}
