{% comment %}
  Snippet can be used in section or block
  eg. {% include 'include-rich-text' %}
{% endcomment %}

{% comment %}Assign object as block or section{% endcomment %}
{% if type == 'block' %}
  {% assign object = block %}
{% else %}
  {% assign object = section %}
{% endif %}

{% assign id = object.id %}
{% comment %}Heading{% endcomment %}
{% assign title = object.settings.title %}
{% assign preheading_font = object.settings.preheading_font %}
{% assign heading_font = object.settings.heading_font %}
{% assign subheading_font = object.settings.subheading_font %}
{% assign heading_color = object.settings.heading_color %}
{% assign heading_alignment = object.settings.heading_alignment %}
{% assign heading_size = object.settings.heading_size %}
{% assign preheading_size = object.settings.preheading_size %}
{% assign subheading_size = object.settings.subheading_size %}
{% comment %}Text{% endcomment %}
{% assign text = object.settings.text %}

{% assign pretext = object.settings.pretext %}
{% assign pretext = object.settings.pretext %}
{% assign pretext_color = object.settings.pretext_color %}
{% assign title = object.settings.title %}
{% assign title_color = object.settings.heading_color %}
{% assign subtitle = object.settings.subtitle %}
{% assign subtitle_color = object.settings.subheading_color %}
{% assign text_alignment = object.settings.text_alignment %}
{% assign text_horizontal_position = object.settings.text_horizontal_position %}
{% assign text_vertical_position = object.settings.text_vertical_position %}
{% assign form_horizontal_position = object.settings.form_horizontal_position %}
{% assign form_vertical_position = object.settings.form_vertical_position %}
{% comment %} Text background {% endcomment %}
{% assign background_color =  object.settings.background_color %}
{% assign background_color_alpha = object.settings.background_opacity | divided_by: 100.00 %}
{% assign text_width =  object.settings.text_width %}


{% assign text_font = object.settings.text_font %}
{% assign text_color = object.settings.text_color %}
{% assign text_alignment = object.settings.text_alignment %}
{% assign text_size = object.settings.text_size %}
{% assign columns = object.settings.columns %}
{% comment %}Button{% endcomment %}
{% assign button_label = object.settings.button_label %}
{% assign button_link = object.settings.button_link %}
{% assign button_style = object.settings.button_style %}
{% assign button_size = object.settings.button_size %}
{% assign button_alignment = object.settings.button_alignment %}
{% comment %}Background{% endcomment %}
{% assign background = object.settings.background %}
{% assign gradient = object.settings.gradient %}
{% assign gradient_rotation = object.settings.gradient_rotation %}
{% comment %}Layout{% endcomment %}x
{% assign width = object.settings.width %}
{% assign padding_top = object.settings.padding_top %}
{% assign padding_bottom = object.settings.padding_bottom %}
{% assign padding_left = object.settings.padding_left %}
{% assign padding_right = object.settings.padding_right %}
{% assign animation = object.settings.animation | default: 'none' %}
{% comment %} Advanced {% endcomment %}
{% assign css_class = object.settings.css_class %}
{% assign custom_css = object.settings.custom_css %}

{% comment %} Is the color set to transparent? {% endcomment %}
{% assign heading_alpha = heading_color | color_extract: 'alpha' %}
{% assign text_alpha = text_color | color_extract: 'alpha' %}
{% assign background_alpha = background | color_extract: 'alpha' %}
{% assign gradient_alpha = gradient | color_extract: 'alpha' %}

{% comment %} Section specific CSS {% endcomment %}

{% capture section_css -%}

  .section {
    background-image: linear-gradient({{ gradient_rotation }}deg, rgba(255,255,255,0), {{ gradient }});
    background-color: {%- if background_alpha != 0 -%}{{ background }}{%- endif -%};
  }

  .rich-text__heading {
    font-size: {{ heading_size }}px;
    color: {%- if heading_alpha != 0 -%}{{ heading_color }}{%- else -%}{{ settings.heading_color }}{%- endif -%};
    font-family: {{ heading_font.family }}, {{ heading_font.fallback_families }};
    font-weight: {{ heading_font.weight }};
    font-style: {{ heading_font.style }};
  }

  .rich-text__text {
    font-size: {{ text_size }}px;
    color: {%- if text_alpha != 0 -%}{{ text_color }}{%- else -%}{{ settings.regular_color }}{%- endif -%};
    font-family: {{ text_font.family }}, {{ text_font.fallback_families }};
    font-weight: {{ text_font.weight }};
    font-style: {{ text_font.style }};
  }
{%- endcapture -%}

{% style %}
  {{ heading_font | font_face }}
  {{ text_font | font_face }}

  #shopify-section-{{ id }} {
    padding-top: {{ padding_top }}px;
    padding-bottom: {{ padding_bottom }}px;
    padding-left: {{ padding_left }}px;
    padding-right: {{ padding_right }}px;
    {% if width == 'wide' %}
      width: 100%;
    {% elsif width == 'half' %}
      width: 50%;
    {% endif %}
  }
  {% render 'css-loop',
          css: section_css,
          id: id
  %}
  {% render 'css-loop',
          css: custom_css,
          id: id
  %}
{% endstyle %}

{% comment %} HTML markup {% endcomment %}

{% capture section_css -%}
  .caption-content {
    background-color: {% if background_color_alpha != 100 %}{{ background_color | color_modify: 'alpha', background_color_alpha }}{% else %}{{ background_color }}{% endif %};
    border: {{ caption_border_width }}px solid {{ caption_border_color }};
  }

 .image-with-text-overlay__heading {
	font-family: {{ heading_font | font_face  }};
	font-size: {{ heading_size }}px;
    color: {% if heading_alpha != 0 %}{{ title_color }}{% else %}{{ settings.heading_color }}{% endif %};
  }

  .image-with-text-overlay__preheading {
	font-family: {{ preheading_font | font_face  }};
	font-size: {{ preheading_size }}px;
    color: {% if preheading_alpha != 0 %}{{ pretext_color }}{% else %}{{ settings.heading_color }}{% endif %};
  }

  .image-with-text-overlay__subheading {
	font-family: {{ subheading_font | font_face  }};
	font-size: {{ subheading_size }}px;
    color: {% if subheading_alpha != 0 %}{{ subtitle_color }}{% else %}{{ settings.heading_color }}{% endif %};
  }
{%- endcapture -%}

{% comment %}Section specific CSS{% endcomment %}

{% style %}
  {% render 'css-loop',
          css: section_css,
          id: id
  %}

  @media only screen and (max-width: 480px) {
    #shopify-section-{{ id }} .image-with-text-overlay__heading {
      color: {% if mobile_headline_alpha != 0 %}{{ mobile_headline_color}}{% endif %};
    }
    #shopify-section-{{ id }} .image-with-text-overlay__preheading {
      color: {% if mobile_preheading_alpha != 0 %}{{ mobile_preheading_color}}{% endif %};
    }
    #shopify-section-{{ id }} .image-with-text-overlay__subheading {
      color: {% if mobile_subtitle_alpha != 0 %}{{ mobile_subtitle_color}}{% endif %};
    }
  }

  @media only screen and (min-width: 480px) {
    #shopify-section-{{ id }} .caption-content {
      width: {{ text_width }}%;
    }
	



  }

  #shopify-section-{{ id }} {
    padding-top: {{ padding_top }}px;
    padding-bottom: {{ padding_bottom }}px;
    padding-left: {{ padding_left }}px;
    padding-right: {{ padding_right }}px;
    {% if width == 'wide' %}
      width: 100%;
    {% elsif width == 'half' %}
      width: 50%;
    {% endif %}
  }

  {% render 'css-loop',
          css: custom_css,
          id: id
  %}

{% endstyle %}

<section class="section
                {{ css_class }}
                is-width-{{ width }}
                {% if background_alpha != 0 or gradient_alpha != 0  %}
                  has-background
                {% endif %}
                "
          {% if animation != "none" %}
            data-scroll-class="{{ animation }}"
          {% endif %}>
  <div class="container
              has-limit
              ">
    <div class="columns one-whole">
      <div class="rich-text__content card-content text-align-{{ text_alignment }}">
        
        
        
         {% if pretext != blank %}
              <div class="image-with-text-overlay__preheading banner__subheading pretext subtitle">
                {{ pretext }}
              </div>
            {% endif %}
            {% if title != blank %}
              <h2 class="image-with-text-overlay__heading banner__heading title rich-text__heading">
                <span>{{ title }}</span>
              </h2>
            {% endif %}
            {% if subtitle != blank %}
              <div class="image-with-text-overlay__subheading banner__subheading subtitle">
                {{ subtitle }}
              </div>
            {% endif %}
        
            {% if text != blank %}
              <div class="rich-text__text has-columns--{{ columns }} text-align-{{ text_alignment }} content {% if text_size > 35 %}mobile-shrink-text{% endif %}">
                {{ text }}
              </div>
            {% endif %}
        

<!--         {% if title != blank %}
          <h2 class="rich-text__heading title text-align-{{ heading_alignment }} {% if heading_size > 50 %}mobile-shrink-text{% endif %}"><span>{{ title }}</span></h2>
        {% endif %}

        {% if text != blank %}
          <div class="rich-text__text has-columns--{{ columns }} text-align-{{ text_alignment }} content {% if text_size > 35 %}mobile-shrink-text{% endif %}">
            {{ text }}
          </div>
        {% endif %} -->

        {% if button_label != blank %}
          <div class="buttons is-{{ button_alignment }}">
            {% render 'button',
                    label: button_label,
                    href: button_link,
                    style: button_style,
                    type: "link"
            %}
          </div>
        {% endif %}
      </div>
    </div>
  </div>
</section>
