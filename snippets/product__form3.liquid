<style>
.popup-overlay {
  visibility: hidden;
  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top */
  left: 0;
  top: 0;
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  overflow: auto; /* Enable scroll if needed */
  background-color: rgb(0,0,0); /* Fallback color */
  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

.popup-content {
  visibility: hidden;
  background-color: #fefefe;
  margin: 15% auto; /* 15% from the top and centered */
  /* padding: 20px; */
  border: 1px solid #888;
  width: 70%;
}

.popup-overlay.active {
  visibility: visible;
}

.popup-content.active {
  visibility: visible;
}

.container-top {
  background-color: #000;
  display: flex;
  justify-content: center;
  height: 100px;
  margin-bottom: 30px;
}

div.quantity-in-modal{
width: unset !important;
}

div.quantity-in-modal, h3.product-title {
      margin: 0 auto !important;
      text-align: center;
}
h1.modal-title {
  margin: 0 auto !important;
  text-align: center;
  color: #fff;
  background-color: #000;
  align-self: center;
}

.modal-button {
  margin: 0 auto !important;
}

h2.center-title {
margin: 0 auto;
justify-content: center;
display: flex;
border-bottom: 0.5px solid #363636;
color: #565656;
}

a.variant-title {
  font-size: 14px;
}

.quantity-picker {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 25px;
  cursor: pointer;
}

.quantity-picker .field {
  width:60%;
  display: inline-block;
  margin-bottom: 0 !important;
}

.qty-btn-2 {
  width:23px;
  height:23px;
  display: inline-block;
  align-items: center;
  text-align: center;
  border-radius: 0;
  background-color: #000;
  color:#fff;
}

.inc {
  float:right;
}
.dec {
  float: left;
 }
.qty-btn-2:hover {
  background-color: #fff;
  color: #000;
  border: 1px solid #000;
}

</style>

{% comment %}
Source: https://gist.github.com/carolineschnapp/9122054
If you are not on a collection page, do define which collection to use in the order form.
Use the following assign statement, replace 'your-collection-handle-here' with your collection handle.

Use the assign statement outside of this comment block at the top of your template.
{% endcomment %}
{% assign collection = collections.classic-candle-collection %}
{% paginate collection.products by 100 %}

<button type="openModal" name="bundle" class="button openModal" data-label='Bundle'>
  <span class="text">Choose Your Set</span>
  <svg x="0px" y="0px" width="32px" height="32px" viewBox="0 0 32 32" class="checkmark">
    <path fill="none" stroke-width="2" stroke-linecap="square" stroke-miterlimit="10" d="M9,17l3.9,3.9c0.1,0.1,0.2,0.1,0.3,0L23,11"/>
  </svg>
</button>

<div class="popup-overlay">
<div class="popup-content">
  <div class="container-top">
    <button class="close">x</button>
    <h1 class="modal-title">Mix and Match Your Set</h1>
  </div>

<form action="/cart" method="post">

  <!-- {#% if template contains 'page' and page.content.size > 0 %}
    <div class="rte">
      {#{ page.content }}
    </div> -->

  {% if collection.products_count > 0 %}


  <div class="container has-column-padding-bottom featured-collection layout--grid has-column-padding-bottom is-justify-center">
    <div class="two-thirds column medium-down--one-whole">
      <div class="container has-column-padding-bottom featured-collection layout--grid masonry-- has-column-padding-bottom is-justify-center">

      {% for product in collection.products %}
        {% if product.available %}
        <div class="product one-half
        column is-justify-center">
        <h2 class="center-title">{{ product.title }}</h2>
        <div class="container has-column-padding-bottom featured-collection layout--grid masonry-- has-column-padding-bottom is-justify-center">
        {% for variant in product.variants %}
          {% if variant.available %}
          <div class="one-half
            column
            thumbnail
            product__thumbnail
            product__grid-item
            thumbnail__hover-overlay--false
            has-padding-bottom">
                  <a href="{{ variant.url | collection }}">
                    <div class="product-image__wrapper">
                      <div class="image__container product__imageContainer">
                        <img src="{{ variant.image | default: product.featured_image | img_url: 'large' }}" alt="{{ variant.title | escape }}" />
                      </div>
                    </div>
                  </a>
                  <a class="variant-title" href="{{ variant.url | collection }}">
                   {{ variant.title }}
                 </a>
                <div>
                   {{ variant.price | money }}
                </div>
                <div class="quantity-picker">
                  <input name="updates[{{ variant.id }}]" onfocus="this.select()" class="quantity-input field" min="0"  max="3" type="text" value="0" tabindex="0" />
                </div>
        </div>
        {% endif %}
      {% endfor %}
        </div>
      </div>
    {% endif %}
  {% endfor %}
  </div>
</div>

  <div class="one-third column medium-down--one-whole" style="background-color:#ebeef0;">
    <div id="output">
      <ul id="output-inner"></ul>
      <input class="button" type="submit" value="Add to the cart" />
    </div>
  </div>
</div>

  {% else %}
    <p>There are no products in this view.</p>
  {% endif %}

</form>
</div>
</div>

{% endpaginate %}

{% if collection.products_count > 0 %}

<script>
$('button.openModal').click( function() {
  event.preventDefault();
  $(".popup-overlay, .popup-content").addClass("active");
});

$(".close").on("click", function(){
  $(".popup-overlay, .popup-content").removeClass("active");
});

$("div.quantity-picker").append('<div class="inc qty-btn-2">+</div>');
$("div.quantity-picker").prepend('<div class="dec qty-btn-2">-</div>');

jQuery(function($) {
  $('.quantity:first').focus();
  $('[max]').change(function() {
    var max = parseInt($(this).attr('max'), 3);
    var value = parseInt($(this).val(), 3) || 0;
    if (value > max) {
      alert('We only have ' + max + ' of this item in stock');
      $(this).val(max);
    }
  });
});

$(document).ready( function() {
  $(".qty-btn-2").click( function() {

    var $button = $(this);
    var oldValue = $button.parent().find("input").val();
    console.log(oldValue);

    if ($button.text() == "+") {
      if (oldValue < 3) {
        var newVal = parseFloat(oldValue) + 1;
      } else {
        newVal = 3;
        alert ('max bundle 3');
      }
    } else {
      // Don't allow decrementing below zero
      if (oldValue > 0) {
        var newVal = parseFloat(oldValue) - 1;
      } else {
        newVal = 0;
      }
    }
    console.log(newVal);

    $button.parent().find("input").val(newVal);

      $(this).each(function() {
        var variant = $button.parent().siblings('.variant-title');
        var titleToUpdate = variant.html();
        console.log(titleToUpdate);
        var productTitle = variant.parents('.product').children('.center-title').html();
        console.log(titleToUpdate);

        var output = document.getElementById('output-inner');
        $(output).append(`<li> ${productTitle} - ${titleToUpdate} - Quantity:${newVal} </li>`);
      });
  });



  // $(".qty-btn-2").each(function() {
  //   $(this).on("click", function(){
  //       // For the boolean value
  //       var boolKey = $(this).data('selected');
  //       // For the mammal value
  //       var mammalKey = $(this).attr('id');
  //
  //       var titleToUpdate = $button.parent().parent().find('a.variant-title').innerHTML;
  //       document.getElementById('output').innerHTML = titleToUpdate;
  //   });
  // });


});

</script>
{% endif %}
