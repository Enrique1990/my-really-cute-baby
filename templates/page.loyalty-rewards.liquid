{{ 'custom-loyalty.css' | asset_url | stylesheet_tag }}
{%- section "reward-summary-header" -%}
{%  comment %}{%- section "reward-summary" -%}{% endcomment %}
<div class="loyalty-lion-wrapper section section__wrapper is-width-standard has-margin-top"><div data-lion-integrated-page=""></div></div>

<script>
document.addEventListener("DOMContentLoaded", function() {
  let changeCount = 0;
  // Select the node that will be observed for mutations
  const targetNode = document.querySelector('[data-lion-integrated-page]');
  
  // Options for the observer (which mutations to observe)
  const config = { attributes: true, childList: true, subtree: true };
  
  // Callback function to execute when mutations are observed
  const callback = (mutationList, observer) => {
    for (const mutation of mutationList) {
      if (mutation.type === 'childList') {
        if (changeCount > 0) return;
        const lionNav = document.querySelector(".lion-header__nav");
        const tierOverView = document.querySelector(".lion-tiers-overview");

        lionNav.insertAdjacentHTML("beforebegin", tierOverView.outerHTML);
        console.log(tierOverView);
        tierOverView?.remove();
        changeCount += 1;
      }
    }
  };
  
  // Create an observer instance linked to the callback function
  const observer = new MutationObserver(callback);
  
  // Start observing the target node for configured mutations
  observer.observe(targetNode, config);
  
  // Later, you can stop observing
  // observer.disconnect();
});
</script>